from flask import Flask, render_template, request, jsonify, make_response
import os
import yaml
import subprocess
from flask_cors import CORS  # Import CORS from flask_cors

app = Flask(__name__)
CORS(app)  # Enable CORS for the entire app

# Static API token (Base64 encoded)
STATIC_API_TOKEN = "Q0FQVE1BTFdBVVRI"

@app.route('/captmalw/', methods=['GET'])
def healthcheck():
    return "OK", 200

@app.route('/captmalw/retrievefile', methods=['POST'])
def retrieve_file():
    # Validasi Ada / Tidaknya Header Auth
    auth_header = request.headers.get('Authorization')
    if not auth_header:
        return 'Unauthorized', 401

    # Validasi Bearer Type Authentication
    auth_type, token = auth_header.split(' ')
    if auth_type != 'Bearer':
        return 'Unauthorized', 401

    # Komparasi AUTH TOKEN
    if token != STATIC_API_TOKEN:
        return 'Unauthorized', 401
    
    filename = request.form.get('filename', '')
    if not filename:
        return 'No filename provided', 400
    
    # Mendapatkan data dari Config.Yaml
    with open('./captain-malware/client/config.yaml') as f:
        config_data = yaml.safe_load(f)
    
    quarantine_dir = config_data.get('quarantine', '')
    directory = config_data.get('directory', '')
    
    file_path = os.path.join(quarantine_dir, filename)
    if not os.path.exists(file_path):
        return f'File {filename} not found in quarantine directory', 404

    # Menyiapkan Variable untuk  
    new_filename = "fp" + filename
    destination_path = os.path.join(directory, "retrieved/", new_filename)

    # Menjalankan Subprocess CLI Commands move ("mv")
    subprocess.run(['sudo', 'mv', file_path, destination_path])
    
    response_text = f'File {filename} retrieved and moved back to the original directory'
    return make_response(response_text, 200)

if __name__ == '__main__':
    # Load config.yaml
    with open('./captain-malware/client/config.yaml') as f:
        config_data = yaml.safe_load(f)
    app.run(host="0.0.0.0", port=8080)